- name: "4.4.2 | Configure authselect"
  become: true
  hosts: rhel
  vars_files: 
    - ../../defaults/main.yml
  vars:
    file:
      - /etc/pam.d/password-auth
      - /etc/pam.d/system-auth
  handlers:
    - import_tasks: ../../handlers/main.yml
  tasks:

    - name: "4.4.2.1 | Ensure custom authselect profile is used"
      block:
        - name: "4.4.2.1 | Ensure custom authselect profile is used | Gather profiles"
          shell: 'authselect current | grep "Profile ID: custom/"'
          failed_when: false
          changed_when: false
          check_mode: false
          register: rhel8_profiles

        - name: "4.4.2.1 | Ensure custom authselect profile is used | Show profiles"
          debug:
            msg:
              - "Below are the current custom profiles"
              - "{{ rhel8_profiles.stdout_lines }}"

        - name: "4.4.2.1 | Ensure custom authselect profile is used | Create custom profiles"
          shell: authselect create-profile {{ uthselect['custom_profile_name'] }} -b {{ authselect['default_file_to_copy'] }}
          when: authselect_custom_profile_create

    - name: "4.4.2.2 | Ensure authselect includes with-faillock"
      block:
        - name: "4.4.2.2 | Ensure authselect includes with-faillock | Gather profiles and enabled features"
          shell: "authselect current | grep with-faillock"
          failed_when: false
          changed_when: false
          check_mode: false
          register: rhel8_profiles_faillock

        - name: "4.4.2.2 | Ensure authselect includes with-faillock| Show profiles"
          ansible.builtin.debug:
            msg:
              - "Below are the current custom profiles"
              - "{{ rhel8_profiles_faillock.stdout_lines }}"

        - name: "4.4.2.2 | Ensure authselect includes with-faillock | Create custom profiles"
          shell: "authselect select custom/{{ rhel8cis_authselect['custom_profile_name'] }} with-faillock"
          when: authselect_custom_profile_select

        - name: 4.4.2.2 | Ensure authselect includes with-faillock | not auth select profile"
          lineinfile:
            path: "{{ file[0] }}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertbefore: "{{ item.before }}"
          loop:
            - { regexp: '^auth\s+required\s+pam_faillock.so preauth silent deny=.*unlock_time=.*', line': 'auth        required      pam_faillock.so preauth', before: '^auth\s+sufficient\s+pam_unix.so try_first_pass'}
            - { regexp: '^auth\s+required\s+pam_faillock.so authfail deny=.*unlock_time=.*', line: 'auth        required      pam_faillock.so authfail', before: '^auth\s+required\s+pam_deny.so'}
            - { regexp: '^account\s+required\s+pam_faillock.so', line: 'account     required      pam_faillock.so', before: '^account     required      pam_unix.so'}
          when:
            - not authselect_custom_profile_select
            - pamd_manual_risks == 'ACCEPT'
            - ansible_distribution_version >= "8.2"

        - name: 4.4.2.2 | Ensure authselect includes with-faillock | not auth select profile"
          lineinfile:
            path: "{{ file[1]}}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertbefore: "{{ item.before | default(omit)}}"
          loop:
            - { regexp: '^auth\s+required\s+pam_faillock.so preauth silent deny=.*unlock_time=.*', line: 'auth        required      pam_faillock.so preauth silent', before: '^auth\s+sufficient\s+pam_unix.so try_first_pass'}
            - { regexp: '^auth\s+required\s+pam_faillock.so authfail deny=.*unlock_time=.*', line: 'auth        required      pam_faillock.so authfail', before: '^auth\s+required\s+pam_deny.so'}
            - { regexp: '^account\s+required\s+pam_faillock.so', line: 'account     required      pam_faillock.so', before: '^account     required      pam_unix.so'}
          when:
            - not authselect_custom_profile_select
            - pamd_manual_risks == 'ACCEPT'
            - ansible_distribution_version >= "8.2"

    - name: 4.4.2.3 | Ensure pam_pwquality module is enabled
      lineinfile:
        path: "{{ item.path }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - { path: "{{ file[0] }}", regexp: '^password\s+requisite\s+pam_pwquality.so', line: 'password requisite pam_pwquality.so local_users_only retry=3'}
        - { path: "{{ file[1] }}", regexp: '^password\s+requisite\s+pam_pwquality.so', line: 'password requisite pam_pwquality.so local_users_only retry=3'}

    - name: 4.4.2.4 | Ensure pam_pwhistory module is enabled
      lineinfile:
        path: "{{ item.path }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - { path: "{{ file[0] }}", regexp: '^password\s+required\s+pam_pwhistory.so', line: 'password required pam_pwhistory.so use_authtok'}
        - { path: "{{ file[1] }}", regexp: '^password\s+required\s+pam_pwhistory.so', line: 'password required pam_pwhistory.so use_authtok'}

    - name: 4.4.2.5 | Ensure pam_unix module is enabled
      block:
        - name: 4.4.2.5 | password-auth
          lineinfile:
            path: "{{ file[0]}}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
          with_items:
            - {regexp: '^auth\s+sufficient\s+pam_unix.so', line: 'auth sufficient pam_unix.so'}
            - {regexp: '^account\s+required\s+pam_unix.so', line: 'account required pam_unix.so'}
            - {regexp: '^(password\s+sufficient\s+pam_unix\.so\s+sha512\s+shadow\s+use_authtok)', line: 'password sufficient pam_unix.so sha512 shadow use_authtok'}
            - {regexp: '^session\s+required\s+pam_unix.so', line: 'session required pam_unix.so'}
            

        - name: 4.4.2.5 | system-auth
          lineinfile:
            path: "{{ file[1]}}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
          with_items:
            - {regexp: '^auth\s+sufficient\s+pam_unix.so', line: 'auth sufficient pam_unix.so'}
            - {regexp: '^account\s+required\s+pam_unix.so', line: 'account required pam_unix.so'}
            - {regexp: '^(password\s+sufficient\s+pam_unix\.so\s+sha512\s+shadow\s+use_authtok)', line: 'password sufficient pam_unix.so sha512 shadow use_authtok'}
            - {regexp: '^session\s+required\s+pam_unix.so', line: 'session required pam_unix.so'}