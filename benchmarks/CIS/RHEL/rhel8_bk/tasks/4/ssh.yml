- name: "4.2 | Configure SSH"
  become: true
  hosts: rhel
  vars_files: 
    - ../../defaults/main.yml
  vars:
    file:
      - /etc/ssh/sshd_config
      - /etc/ssh
  handlers:
    - import_tasks: ../../handlers/main.yml
  tasks:

    - name: "4.2.1 | Ensure permissions on /etc/ssh/sshd_config are configured"
      file:
        path: "{{ file[0] }}"
        owner: root
        group: root
        mode: 0600

    # private keys
    - name: "4.2.2 | Ensure permissions on SSH private host key files are configured"
      block:
        - name: "4.2.2 | Ensure permissions on SSH private host key files are configured | Find the SSH private host keys"
          find:
            paths: "{{ file[1] }}"
            patterns: 'ssh_host_*_key'
            recurse: true
            file_type: any
          register: ssh_private_host_key

        - name: "4.2.2 | Ensure permissions on SSH private host key files are configured | Set permissions on SSH private host keys"
          file:
            path: "{{ item.path }}"
            owner: root
            group: root
            mode: 0600
          with_items:
            - "{{ ssh_private_host_key.files }}"
          loop_control:
            label: "{{ item.path }}"

    # public
    - name: "4.2.3 | Ensure permissions on SSH public host key files are configured"
      block:
        - name: "4.2.3 | Ensure permissions on SSH public host key files are configured | Find the SSH public host keys"
          find:
            paths: "{{ file[1] }}"
            patterns: 'ssh_host_*_key.pub'
            recurse: true
            file_type: any
          register: ssh_public_host_key

        - name: "4.2.3 | Ensure permissions on SSH public host key files are configured | Set permissions on SSH public host keys"
          file:
            path: "{{ item.path }}"
            owner: root
            group: root
            mode: 0644
          with_items:
              - "{{ ssh_public_host_key.files }}"
          loop_control:
              label: "{{ item.path }}"

    - name: "4.2.4 | Ensure SSH access is limited"
      block:
        - name: "4.2.4 | Ensure SSH access is limited | Add line to sshd_config for allowusers"
          lineinfile:
            path: "{{ file[0] }}"
            regexp: "^AllowUsers"
            line: AllowUsers {{ sshd['allowusers'] }}
          notify: restart sshd
          when: "sshd['allowusers']|default('') | length > 0"

        - name: "4.2.4 | Ensure SSH access is limited | Add line to sshd_config for allowgroups"
          lineinfile:
            path: "{{ file[0] }}"
            regexp: "^AllowGroups"
            line: AllowGroups {{ sshd['allowgroups'] }}
          notify: restart sshd
          when: "sshd['allowgroups']|default('') | length > 0"

        - name: "4.2.4 | Ensure SSH access is limited | Add line to sshd_config for denyusers"
          lineinfile:
            path: "{{ file[0] }}"
            regexp: "^DenyUsers"
            line: DenyUsers {{ sshd['denyusers'] }}
          notify: restart sshd
          when: "sshd['denyusers']|default('') | length > 0"

        - name: "4.2.4 | PATCH | Ensure SSH access is limited | Add line to sshd_config for denygroups"
          lineinfile:
            path: "{{ file[0] }}"
            regexp: "^DenyGroups"
            line: DenyGroups {{ sshd['denygroups'] }}
          notify: restart sshd
          when: "sshd['denygroups']|default('') | length > 0"

    - name: "4.2.5 | Ensure SSH warning banner is configured"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: '^Banner'
        line: 'Banner /etc/issue.net'

    - name: "4.2.6 Ensure sshd Ciphers are configured"

    - name: "4.2.7 | Ensure SSH Idle Timeout Interval is configured"
      block:
        - name: "4.2.7 | Ensure SSH Idle Timeout Interval is configured | Add line in sshd_config for ClientAliveInterval"
          lineinfile:
            path: "{{ file[0] }}"
            regexp: '^ClientAliveInterval'
            line: "ClientAliveInterval {{ sshd['clientaliveinterval'] }}"

        - name: "4.2.7 | PATCH | Ensure SSH Idle Timeout Interval is configured | Ensure SSH ClientAliveCountMax set to <= 3"
          lineinfile:
            path: "{{ file[0] }}"
            regexp: '^ClientAliveCountMax'
            line: "ClientAliveCountMax {{ sshd['clientalivecountmax'] }}"

    - name: "4.2.6| 4.2.10 | 4.2.11 | 4.2.13| 4.2.14| 4.2.21| Ensure sshd_settings are enabled"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: "{{ item.regex }}"
        line: "{{ item.line }}"
      with_items:
        - { regex: "^#LogLevel|^LogLevel", line: 'LogLevel {{ ssh_loglevel }}' } #4.2.13
        - { regex: ^#?\s*Ciphers\s', line: 'Ciphers aes256-ctr,aes192-ctr,aes128-ctr'} #4.2.6
        - { regex: "^#UsePAM|^UsePAM", line: 'UsePAM yes' } # 4.2.21
        - { regex: "^#IgnoreRhosts|^IgnoreRhosts", line: 'IgnoreRhosts yes' } #4.2.10
        - { regex: ^#?\s*KexAlgorithms\s', line: 'KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1'} #4.2.11
        - { regex: ^#?\s*MACs\s', line: 'MACs -hmac-md5, hmac-md5-96,hmac-ripemd160, hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ipemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com'} #4.2.14

    - name: "??? | 4.2.8 | 4.2.9| 4.2.18 | 4.2.19| Ensure sshd settings are disabled"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: "{{ item.regex }}"
        line: "{{ item.line }}"
      with_items:
        - { regex: "^#PermitRootLogin|^PermitRootLogin", line: PermitRootLogin no' } # 4.2.19
        - { regex: ^#HostbasedAuthentication|^HostbasedAuthentication", line: 'HostbasedAuthentication no' } #4.2.9
        - { regex: "^#PermitEmptyPasswords|^PermitEmptyPasswords", line: 'PermitEmptyPasswords no' } #4.2.18
        # comment this out if you plan to use VNC connections to hosts / a GUI connection
        - { regex: "^#DisableForwarding|^DisableForwarding", line: 'DisableForwarding yes' } # 4.2.8

    - name: "4.2.12 | Ensure SSH LoginGraceTime is set to one minute or less"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: "^#LoginGraceTime|^LoginGraceTime"
        line: "LoginGraceTime {{ sshd['logingracetime'] }}"

    - name: "4.2.13 | Ensure SSH LogLevel is appropriate"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: "^#LogLevel|^LogLevel"
        line: 'LogLevel {{ ssh_loglevel }}'

    - name: "4.2.15 | Ensure SSH MaxAuthTries is set to 4 or less"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: '^(#)?MaxAuthTries \d'
        line: 'MaxAuthTries 4'

    - name: "4.2.16 | Ensure SSH MaxSessions is set to 10 or less"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: "^#MaxSessions|^MaxSessions"
        line: 'MaxSessions {{ ssh_maxsessions }}'

    - name: "4.2.17 | Ensure SSH MaxStartups is configured"
      lineinfile:
        path: "{{ file[0] }}"
        regexp: "^#MaxStartups|^MaxStartups"
        line: 'MaxStartups 10:30:60'

    #  Commenting this out due to their may be a need to set an enviornmental variable while sshing into system
    # - name: "4.2.20 | Ensure SSH PermitUserEnvironment is disabled"
    #   lineinfile:
    #     path: "{{ file[0] }}"
    #     regexp: "^#PermitUserEnvironment|^PermitUserEnvironment"
    #     line: 'PermitUserEnvironment no'

    - name: "4.2.22 | Ensure system-wide crypto policy is not over-ridden"
      block:
        - name: "4.2.22 | Ensure system-wide crypto policy is not over-ridden"
          shell: grep -i '^\s*CRYPTO_POLICY=' /etc/sysconfig/sshd
          failed_when: ( crypto_policy_override.rc not in [ 0, 1 ] )
          changed_when: false
          register: crypto_policy_override

        - name: "4.2.22 | Ensure system-wide crypto policy is not over-ridden"
          shell: sed -ri "s/^\s*(CRYPTO_POLICY\s*=.*)$/# \1/" /etc/sysconfig/sshd
          notify: restart sshd
          when:
              - crypto_policy_override.stdout | length > 0